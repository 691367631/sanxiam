<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxia.market.dao.ShoppingEvaluateDao" >
  <resultMap id="BaseResultMap" type="com.sanxia.market.entity.ShoppingEvaluate" >
	<id column="id" property="id"  />
	 <result column="addTime" property="addTime"  />
	 <result column="deleteStatus" property="deleteStatus"  />
	 <result column="evaluate_admin_info" property="evaluateAdminInfo"  />
	 <result column="evaluate_buyer_val" property="evaluateBuyerVal"  />
	 <result column="evaluate_info" property="evaluateInfo"  />
	 <result column="evaluate_seller_info" property="evaluateSellerInfo"  />
	 <result column="evaluate_seller_time" property="evaluateSellerTime"  />
	 <result column="evaluate_seller_val" property="evaluateSellerVal"  />
	 <result column="evaluate_status" property="evaluateStatus"  />
	 <result column="evaluate_type" property="evaluateType"  />
	 <result column="goods_spec" property="goodsSpec"  />
	 <result column="evaluate_goods_id" property="evaluateGoodsId"  />
	 <result column="evaluate_seller_user_id" property="evaluateSellerUserId"  />
	 <result column="evaluate_user_id" property="evaluateUserId"  />
	 <result column="of_id" property="ofId"  />
	 <result column="description_evaluate" property="descriptionEvaluate"  />
	 <result column="service_evaluate" property="serviceEvaluate"  />
	 <result column="ship_evaluate" property="shipEvaluate"  />
	 </resultMap>
  <sql id="Base_Column_List" >
   id,
   addTime,
   deleteStatus,
   evaluate_admin_info,
   evaluate_buyer_val,
   evaluate_info,
   evaluate_seller_info,
   evaluate_seller_time,
   evaluate_seller_val,
   evaluate_status,
   evaluate_type,
   goods_spec,
   evaluate_goods_id,
   evaluate_seller_user_id,
   evaluate_user_id,
   of_id,
   description_evaluate,
   service_evaluate,
   ship_evaluate
  </sql>

  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from shopping_evaluate
 	where  id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="listBy" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from shopping_evaluate
    <where>
      <include refid="condition_sql"/>
    </where>
  </select>

  <select id="getBy" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from shopping_evaluate
    <where>
      <include refid="condition_sql"/>
    </where>
  </select>
  
  <sql id="condition_sql">
   <if test="id != null and id != ''"> and  id =#{id,jdbcType=VARCHAR} </if>
   <if test="addTime != null and addTime != ''"> and  addTime =#{addTime,jdbcType=VARCHAR} </if>
   <if test="deleteStatus != null and deleteStatus != ''"> and  deleteStatus =#{deleteStatus,jdbcType=VARCHAR} </if>
   <if test="evaluateAdminInfo != null and evaluateAdminInfo != ''"> and  evaluate_admin_info =#{evaluateAdminInfo,jdbcType=VARCHAR} </if>
   <if test="evaluateBuyerVal != null and evaluateBuyerVal != ''"> and  evaluate_buyer_val =#{evaluateBuyerVal,jdbcType=VARCHAR} </if>
   <if test="evaluateInfo != null and evaluateInfo != ''"> and  evaluate_info =#{evaluateInfo,jdbcType=VARCHAR} </if>
   <if test="evaluateSellerInfo != null and evaluateSellerInfo != ''"> and  evaluate_seller_info =#{evaluateSellerInfo,jdbcType=VARCHAR} </if>
   <if test="evaluateSellerTime != null and evaluateSellerTime != ''"> and  evaluate_seller_time =#{evaluateSellerTime,jdbcType=VARCHAR} </if>
   <if test="evaluateSellerVal != null and evaluateSellerVal != ''"> and  evaluate_seller_val =#{evaluateSellerVal,jdbcType=VARCHAR} </if>
   <if test="evaluateStatus != null and evaluateStatus != ''"> and  evaluate_status =#{evaluateStatus,jdbcType=VARCHAR} </if>
   <if test="evaluateType != null and evaluateType != ''"> and  evaluate_type =#{evaluateType,jdbcType=VARCHAR} </if>
   <if test="goodsSpec != null and goodsSpec != ''"> and  goods_spec =#{goodsSpec,jdbcType=VARCHAR} </if>
   <if test="evaluateGoodsId != null and evaluateGoodsId != ''"> and  evaluate_goods_id =#{evaluateGoodsId,jdbcType=VARCHAR} </if>
   <if test="evaluateSellerUserId != null and evaluateSellerUserId != ''"> and  evaluate_seller_user_id =#{evaluateSellerUserId,jdbcType=VARCHAR} </if>
   <if test="evaluateUserId != null and evaluateUserId != ''"> and  evaluate_user_id =#{evaluateUserId,jdbcType=VARCHAR} </if>
   <if test="ofId != null and ofId != ''"> and  of_id =#{ofId,jdbcType=VARCHAR} </if>
   <if test="descriptionEvaluate != null and descriptionEvaluate != ''"> and  description_evaluate =#{descriptionEvaluate,jdbcType=VARCHAR} </if>
   <if test="serviceEvaluate != null and serviceEvaluate != ''"> and  service_evaluate =#{serviceEvaluate,jdbcType=VARCHAR} </if>
   <if test="shipEvaluate != null and shipEvaluate != ''"> and  ship_evaluate =#{shipEvaluate,jdbcType=VARCHAR} </if>
  </sql>

  <select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from shopping_evaluate 
    <where>
      <include refid="condition_sql" />
    </where>
 <!--   <![CDATA[ order by create_time desc limit #{pageFirst}, #{pageSize}]]> -->
  </select>

  <select id="listPageCount" parameterType="java.util.Map" resultType="long">
    select count(1) from  shopping_evaluate
    <where>
      <include refid="condition_sql" />
    </where>
  </select>




  <insert id="insertOne" parameterType="com.sanxia.market.entity.ShoppingEvaluate" >
    insert into shopping_evaluate (
   id,
      addTime,
      deleteStatus,
      evaluate_admin_info,
      evaluate_buyer_val,
      evaluate_info,
      evaluate_seller_info,
      evaluate_seller_time,
      evaluate_seller_val,
      evaluate_status,
      evaluate_type,
      goods_spec,
      evaluate_goods_id,
      evaluate_seller_user_id,
      evaluate_user_id,
      of_id,
      description_evaluate,
      service_evaluate,
      ship_evaluate
    )
    values (
 	#{id,jdbcType=VARCHAR},
 	#{addTime,jdbcType=VARCHAR},
 	#{deleteStatus,jdbcType=VARCHAR},
 	#{evaluateAdminInfo,jdbcType=VARCHAR},
 	#{evaluateBuyerVal,jdbcType=VARCHAR},
 	#{evaluateInfo,jdbcType=VARCHAR},
 	#{evaluateSellerInfo,jdbcType=VARCHAR},
 	#{evaluateSellerTime,jdbcType=VARCHAR},
 	#{evaluateSellerVal,jdbcType=VARCHAR},
 	#{evaluateStatus,jdbcType=VARCHAR},
 	#{evaluateType,jdbcType=VARCHAR},
 	#{goodsSpec,jdbcType=VARCHAR},
 	#{evaluateGoodsId,jdbcType=VARCHAR},
 	#{evaluateSellerUserId,jdbcType=VARCHAR},
 	#{evaluateUserId,jdbcType=VARCHAR},
 	#{ofId,jdbcType=VARCHAR},
 	#{descriptionEvaluate,jdbcType=VARCHAR},
 	#{serviceEvaluate,jdbcType=VARCHAR},
#{shipEvaluate,jdbcType=VARCHAR} 	) </insert>

  <update id="updateOne" parameterType="com.sanxia.market.entity.ShoppingEvaluate" >
    update shopping_evaluate
    set 
  	id	=#{id,jdbcType=VARCHAR},
  	addTime	=#{addTime,jdbcType=VARCHAR},
  	deleteStatus	=#{deleteStatus,jdbcType=VARCHAR},
  	evaluate_admin_info	=#{evaluateAdminInfo,jdbcType=VARCHAR},
  	evaluate_buyer_val	=#{evaluateBuyerVal,jdbcType=VARCHAR},
  	evaluate_info	=#{evaluateInfo,jdbcType=VARCHAR},
  	evaluate_seller_info	=#{evaluateSellerInfo,jdbcType=VARCHAR},
  	evaluate_seller_time	=#{evaluateSellerTime,jdbcType=VARCHAR},
  	evaluate_seller_val	=#{evaluateSellerVal,jdbcType=VARCHAR},
  	evaluate_status	=#{evaluateStatus,jdbcType=VARCHAR},
  	evaluate_type	=#{evaluateType,jdbcType=VARCHAR},
  	goods_spec	=#{goodsSpec,jdbcType=VARCHAR},
  	evaluate_goods_id	=#{evaluateGoodsId,jdbcType=VARCHAR},
  	evaluate_seller_user_id	=#{evaluateSellerUserId,jdbcType=VARCHAR},
  	evaluate_user_id	=#{evaluateUserId,jdbcType=VARCHAR},
  	of_id	=#{ofId,jdbcType=VARCHAR},
  	description_evaluate	=#{descriptionEvaluate,jdbcType=VARCHAR},
  	service_evaluate	=#{serviceEvaluate,jdbcType=VARCHAR},
  	ship_evaluate	= #{shipEvaluate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

   <delete id="delete" parameterType="String">
		delete from
		shopping_evaluate
		where  id = #{id,jdbcType=VARCHAR}
	</delete>
	
	
	 <resultMap id="queryGoodsEvaluateResultMap" type="com.sanxia.market.dto.goods.QueryGoodsEvaluateResponse" >
	 <result column="evaluate_id" property="evaluate_id"  />
	 <result column="description_evaluate" property="description_evaluate"  />
	 <result column="evaluate_info" property="evaluate_info"  />
	 <result column="addTime" property="addTime"  />
	 <result column="evaluate_user" property="evaluate_user"  />
	 </resultMap>
	 
	<sql id="queryGoodsEvaluate_sql">
     <if test="goods_id != null and goods_id != ''"> and  a.evaluate_goods_id = #{goods_id,jdbcType=VARCHAR} </if>
    </sql>
	  <select id="queryGoodsEvaluate" parameterType="java.util.Map" resultMap="queryGoodsEvaluateResultMap">
    SELECT a.`evaluate_info` ,a.description_evaluate,a.addTime,a.`id` AS evaluate_id,b.`userName` AS evaluate_user FROM `shopping_evaluate` a LEFT JOIN `shopping_user` b ON a.evaluate_user_id=b.id  
    <where>
      <include refid="queryGoodsEvaluate_sql" />
      and a.evaluate_type='goods'
    </where>
    <![CDATA[ order by a.addTime desc limit #{pageFirst}, #{pageSize}]]>  
  </select>
  
    <select id="listPageCountQueryGoodsEvaluate" parameterType="java.util.Map" resultType="long">
    select count(1) from  (
     SELECT a.`evaluate_info` ,a.description_evaluate,a.addTime,a.`id` AS evaluate_id,b.`userName` AS evaluate_user FROM `shopping_evaluate` a LEFT JOIN `shopping_user` b ON a.evaluate_user_id=b.id  
    <where>
      <include refid="queryGoodsEvaluate_sql" />
      and a.evaluate_type='goods'
    </where>
    ) m
  </select>
</mapper>